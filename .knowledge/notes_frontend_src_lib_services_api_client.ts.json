{"is_source_file": true, "format": "TypeScript", "description": "This file defines the API client interface, including data types, external dependencies, and implementation selection logic between HTTP and Mock clients for a notes management application.", "external_files": ["./http", "./mock"], "external_methods": [], "published": ["ID", "User", "AuthResponse", "Note", "ListNotesParams", "ApiClient", "apiClient"], "classes": [], "methods": [{"name": "setAuthToken(token: string | null): void; setAuthToken", "description": "Sets the authentication token for the API client.", "scope": "ApiClient", "scopeKind": "interface"}, {"name": "login(email: string, password: string): Promise<AuthResponse>; login", "description": "Performs user login with email and password, returning authentication response.", "scope": "ApiClient", "scopeKind": "interface"}, {"name": "register(email: string, password: string): Promise<AuthResponse>; register", "description": "Registers a new user with email and password.", "scope": "ApiClient", "scopeKind": "interface"}, {"name": "logout(): Promise<void>; logout", "description": "Logs out the current user.", "scope": "ApiClient", "scopeKind": "interface"}, {"name": "listNotes(params?: ListNotesParams): Promise<Note[]>; listNotes", "description": "Retrieves a list of notes, optionally filtered by search parameters.", "scope": "ApiClient", "scopeKind": "interface"}, {"name": "createNote(title: string, content: string): Promise<Note>; createNote", "description": "Creates a new note with a title and content.", "scope": "ApiClient", "scopeKind": "interface"}, {"name": "updateNote(id: ID, title: string, content: string): Promise<Note>; updateNote", "description": "Updates an existing note identified by ID with new title and content.", "scope": "ApiClient", "scopeKind": "interface"}, {"name": "deleteNote(id: ID): Promise<void>; deleteNote", "description": "Deletes a note by ID.", "scope": "ApiClient", "scopeKind": "interface"}], "calls": ["new MockApiClient()", "new HttpApiClient(base)"], "search-terms": ["API client", "TypeScript interfaces", "Notes application", "MockApiClient", "HttpApiClient", "selects between HTTP and Mock"], "state": 2, "file_id": 13, "knowledge_revision": 44, "git_revision": "", "revision_history": [{"27": ""}, {"44": ""}], "ctags": [{"_type": "tag", "name": "ApiClient", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^export interface ApiClient {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "AuthResponse", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^export interface AuthResponse {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "ID", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^export type ID = string;$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "ListNotesParams", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^export interface ListNotesParams {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^export interface Note {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^export interface User {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "apiClient", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^export const apiClient: ApiClient = useMock ? new MockApiClient() : new HttpApiClient(base);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^const base = baseEnv || '\\/api';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "baseEnv", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^const baseEnv = (publicEnv?.PUBLIC_API_BASE_URL ?? '').trim();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^  content: string;$/", "language": "TypeScript", "kind": "property", "scope": "Note", "scopeKind": "interface"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^  createNote(title: string, content: string): Promise<Note>;$/", "language": "TypeScript", "kind": "method", "scope": "ApiClient", "scopeKind": "interface"}, {"_type": "tag", "name": "createdAt", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^  createdAt: string; \\/\\/ ISO$/", "language": "TypeScript", "kind": "property", "scope": "Note", "scopeKind": "interface"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^  deleteNote(id: ID): Promise<void>;$/", "language": "TypeScript", "kind": "method", "scope": "ApiClient", "scopeKind": "interface"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^  email: string;$/", "language": "TypeScript", "kind": "property", "scope": "User", "scopeKind": "interface"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^  id: ID;$/", "language": "TypeScript", "kind": "property", "scope": "Note", "scopeKind": "interface"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^  id: ID;$/", "language": "TypeScript", "kind": "property", "scope": "User", "scopeKind": "interface"}, {"_type": "tag", "name": "listNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^  listNotes(params?: ListNotesParams): Promise<Note[]>;$/", "language": "TypeScript", "kind": "method", "scope": "ApiClient", "scopeKind": "interface"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^  login(email: string, password: string): Promise<AuthResponse>;$/", "language": "TypeScript", "kind": "method", "scope": "ApiClient", "scopeKind": "interface"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^  logout(): Promise<void>;$/", "language": "TypeScript", "kind": "method", "scope": "ApiClient", "scopeKind": "interface"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^  register(email: string, password: string): Promise<AuthResponse>;$/", "language": "TypeScript", "kind": "method", "scope": "ApiClient", "scopeKind": "interface"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^  search?: string;$/", "language": "TypeScript", "kind": "property", "scope": "ListNotesParams", "scopeKind": "interface"}, {"_type": "tag", "name": "setAuthToken", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^  setAuthToken(token: string | null): void;$/", "language": "TypeScript", "kind": "method", "scope": "ApiClient", "scopeKind": "interface"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^  title: string;$/", "language": "TypeScript", "kind": "property", "scope": "Note", "scopeKind": "interface"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^  token: string;$/", "language": "TypeScript", "kind": "property", "scope": "AuthResponse", "scopeKind": "interface"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^  updateNote(id: ID, title: string, content: string): Promise<Note>;$/", "language": "TypeScript", "kind": "method", "scope": "ApiClient", "scopeKind": "interface"}, {"_type": "tag", "name": "updatedAt", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^  updatedAt: string; \\/\\/ ISO$/", "language": "TypeScript", "kind": "property", "scope": "Note", "scopeKind": "interface"}, {"_type": "tag", "name": "useMock", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^const useMock = useMockStr === 'true' || base.toLowerCase() === 'mock';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "useMockStr", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^const useMockStr = (publicEnv?.PUBLIC_USE_MOCK_API ?? '').toLowerCase();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/client.ts", "pattern": "/^  user: User;$/", "language": "TypeScript", "kind": "property", "scope": "AuthResponse", "scopeKind": "interface"}], "hash": "9172a874645f5a3a20de1e53bbfad676", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/lib/services/api/client.ts", "fields": [{"name": "export interface ApiClient {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export interface AuthResponse {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export interface ListNotesParams {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export interface Note {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export interface User {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "content: string;", "scope": "Note", "scopeKind": "interface", "description": "unavailable"}, {"name": "createdAt: string; \\/\\/ ISO", "scope": "Note", "scopeKind": "interface", "description": "unavailable"}, {"name": "email: string;", "scope": "User", "scopeKind": "interface", "description": "unavailable"}, {"name": "id: ID;", "scope": "Note", "scopeKind": "interface", "description": "unavailable"}, {"name": "search?: string;", "scope": "ListNotesParams", "scopeKind": "interface", "description": "unavailable"}, {"name": "title: string;", "scope": "Note", "scopeKind": "interface", "description": "unavailable"}, {"name": "token: string;", "scope": "AuthResponse", "scopeKind": "interface", "description": "unavailable"}, {"name": "updatedAt: string; \\/\\/ ISO", "scope": "Note", "scopeKind": "interface", "description": "unavailable"}, {"name": "user: User;", "scope": "AuthResponse", "scopeKind": "interface", "description": "unavailable"}]}