{"is_source_file": true, "format": "TypeScript", "description": "This file defines an HTTP API client class for communicating with a REST backend using fetch. It includes methods for authentication (login, register, logout) and CRUD operations on notes, employing Bearer token authorization when available.", "external_files": ["./client"], "external_methods": ["fetch"], "published": ["HttpApiClient"], "classes": [{"name": "HttpApiClient", "description": "Implements the ApiClient interface to interact with a RESTful backend, handling authentication tokens, making fetch requests, and managing responses for note and auth operations."}], "methods": [{"name": "setAuthToken(token: string | null): void { setAuthToken", "description": "Sets the Bearer token used for subsequent HTTP requests.", "scope": "HttpApiClient", "scopeKind": "class"}, {"name": "async login(email: string, password: string): Promise<AuthResponse> { login", "description": "Logs in with email and password, returning an authentication response.", "scope": "HttpApiClient", "scopeKind": "class"}, {"name": "async register(email: string, password: string): Promise<AuthResponse> { register", "description": "Registers a new user with email and password, returning an authentication response.", "scope": "HttpApiClient", "scopeKind": "class"}, {"name": "async logout(): Promise<void> { logout", "description": "Logs out the current session server-side.", "scope": "HttpApiClient", "scopeKind": "class"}, {"name": "async listNotes(params?: ListNotesParams): Promise<Note[]> { listNotes", "description": "Fetches a list of notes, optionally filtered by a search term.", "scope": "HttpApiClient", "scopeKind": "class"}, {"name": "async createNote(title: string, content: string): Promise<Note> { createNote", "description": "Creates a new note with a title and content.", "scope": "HttpApiClient", "scopeKind": "class"}, {"name": "async updateNote(id: ID, title: string, content: string): Promise<Note> { updateNote", "description": "Updates an existing note identified by ID with new title and content.", "scope": "HttpApiClient", "scopeKind": "class"}, {"name": "async deleteNote(id: ID): Promise<void> { deleteNote", "description": "Deletes a note identified by ID.", "scope": "HttpApiClient", "scopeKind": "class"}, {"name": "constructor(baseUrl: string) { constructor", "scope": "HttpApiClient", "scopeKind": "class", "description": "unavailable"}, {"name": "private async handle<T>(res: Response): Promise<T> { handle", "scope": "HttpApiClient", "scopeKind": "class", "description": "unavailable"}, {"name": "private headers(isJson = true): HeadersInit { headers", "scope": "HttpApiClient", "scopeKind": "class", "description": "unavailable"}], "calls": ["fetch", "this.handle"], "search-terms": ["HttpApiClient", "fetch", "REST", "authentication", "notes", "CRUD", "Bearer token"], "state": 2, "file_id": 14, "knowledge_revision": 29, "git_revision": "", "ctags": [{"_type": "tag", "name": "HttpApiClient", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^export class HttpApiClient implements ApiClient {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "baseUrl", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^  private baseUrl: string;$/", "language": "TypeScript", "kind": "property", "scope": "HttpApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^  constructor(baseUrl: string) {$/", "language": "TypeScript", "kind": "method", "scope": "HttpApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^  async createNote(title: string, content: string): Promise<Note> {$/", "language": "TypeScript", "kind": "method", "scope": "HttpApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^  async deleteNote(id: ID): Promise<void> {$/", "language": "TypeScript", "kind": "method", "scope": "HttpApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "handle", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^  private async handle<T>(res: Response): Promise<T> {$/", "language": "TypeScript", "kind": "method", "scope": "HttpApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^    const headers: Record<string, string> = {};$/", "language": "TypeScript", "kind": "constant", "scope": "HttpApiClient.headers", "scopeKind": "method"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^  private headers(isJson = true): HeadersInit {$/", "language": "TypeScript", "kind": "method", "scope": "HttpApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "listNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^  async listNotes(params?: ListNotesParams): Promise<Note[]> {$/", "language": "TypeScript", "kind": "method", "scope": "HttpApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^  async login(email: string, password: string): Promise<AuthResponse> {$/", "language": "TypeScript", "kind": "method", "scope": "HttpApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^  async logout(): Promise<void> {$/", "language": "TypeScript", "kind": "method", "scope": "HttpApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "q", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^    const q = params?.search ? `?search=${encodeURIComponent(params.search)}` : '';$/", "language": "TypeScript", "kind": "constant", "scope": "HttpApiClient.listNotes", "scopeKind": "method"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^  async register(email: string, password: string): Promise<AuthResponse> {$/", "language": "TypeScript", "kind": "method", "scope": "HttpApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^    const res = await fetch(`${this.baseUrl}\\/auth\\/login`, {$/", "language": "TypeScript", "kind": "constant", "scope": "HttpApiClient.login", "scopeKind": "method"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^    const res = await fetch(`${this.baseUrl}\\/auth\\/logout`, {$/", "language": "TypeScript", "kind": "constant", "scope": "HttpApiClient.logout", "scopeKind": "method"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^    const res = await fetch(`${this.baseUrl}\\/auth\\/register`, {$/", "language": "TypeScript", "kind": "constant", "scope": "HttpApiClient.register", "scopeKind": "method"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^    const res = await fetch(`${this.baseUrl}\\/notes${q}`, {$/", "language": "TypeScript", "kind": "constant", "scope": "HttpApiClient.listNotes", "scopeKind": "method"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^    const res = await fetch(`${this.baseUrl}\\/notes\\/${encodeURIComponent(id)}`, {$/", "language": "TypeScript", "kind": "constant", "scope": "HttpApiClient.deleteNote", "scopeKind": "method"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^    const res = await fetch(`${this.baseUrl}\\/notes\\/${encodeURIComponent(id)}`, {$/", "language": "TypeScript", "kind": "constant", "scope": "HttpApiClient.updateNote", "scopeKind": "method"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^    const res = await fetch(`${this.baseUrl}\\/notes`, {$/", "language": "TypeScript", "kind": "constant", "scope": "HttpApiClient.createNote", "scopeKind": "method"}, {"_type": "tag", "name": "setAuthToken", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^  setAuthToken(token: string | null): void {$/", "language": "TypeScript", "kind": "method", "scope": "HttpApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "text", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^      const text = await res.text().catch(() => '');$/", "language": "TypeScript", "kind": "constant", "scope": "HttpApiClient.handle", "scopeKind": "method"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^  private token: string | null = null;$/", "language": "TypeScript", "kind": "property", "scope": "HttpApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-159557-159586/notes_frontend/src/lib/services/api/http.ts", "pattern": "/^  async updateNote(id: ID, title: string, content: string): Promise<Note> {$/", "language": "TypeScript", "kind": "method", "scope": "HttpApiClient", "scopeKind": "class"}], "hash": "a92e803f1cc38c93947f6f0b7e5d08fa", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/lib/services/api/http.ts", "fields": [{"name": "private baseUrl: string;", "scope": "HttpApiClient", "scopeKind": "class", "description": "unavailable"}, {"name": "private token: string | null = null;", "scope": "HttpApiClient", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"29": ""}]}